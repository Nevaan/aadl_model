package Bankomat
public
	with base_types;
	
	System AtmSystem	
	end AtmSystem;	
	
	system implementation AtmSystem.with_devices
		subcomponents 
			this_czytnik_kart: device CzytnikKart;
			this_modul_gotowkowy: device ModulGotowkowy;
			this_drukarka: device Drukarka;
			this_sejf: device Sejf;
			this_klawiatura: device Klawiatura;
			this_wyswietlacz: device Wyswietlacz;
			this_modul_lacznosci: device Modul_Lacznosci;
			
			this_controller: process Controller.with_threads;
			
			this_bus: bus HwConnection.impl;
			this_processor: processor MainProcessor.impl;
			
		connections
			-- Event connections
			czytnik_out_conn: port this_czytnik_kart.wlozono_karte -> this_controller.czytnik_in;
			czytnik_in_conn: port this_controller.czytnik_out -> this_czytnik_kart.zatrzymaj_karte;
			drukarka_conn: port this_controller.drukarka_out -> this_drukarka.drukuj;
			sejf_in_conn: port this_sejf.umieszczono_gotowke -> this_controller.sejf_in;
			sejf_out_conn: port this_controller.sejf_out -> this_sejf.wydaj_gotowke;
			modul_gotowkowy_in_conn: port this_modul_gotowkowy.gotowka_pobrana -> this_controller.modul_gotowkowy_in;
			modul_gotowkowy_out_conn: port this_controller.modul_gotowkowy_out -> this_modul_gotowkowy.pobierz_gotowke;
			
			-- Data connections
			wyswietlacz_conn: port this_controller.obraz_out -> this_wyswietlacz.obraz_input;			
			klawiatura_conn: port this_klawiatura.key_input -> this_controller.key_input;
			modul_lacznosci_dane_karty: port this_controller.dane_karty_out -> this_modul_lacznosci.dane_karty;
			modul_lacznosci_dane_konta: port this_modul_lacznosci.dane_konta ->this_controller.dane_konta_in;
			
			
			-- Bus connections
			bus_czytnik_kart: bus access this_bus -> this_czytnik_kart.bus_access;
			bus_modul_gotowkowy: bus access this_bus -> this_modul_gotowkowy.bus_access;
			bus_drukarka: bus access this_bus -> this_drukarka.bus_access;
			bus_sejf: bus access this_bus -> this_sejf.bus_access;
			bus_klawiatura: bus access this_bus -> this_klawiatura.bus_access;
			bus_wyswietlacz: bus access this_bus -> this_wyswietlacz.bus_access; 
			bus_processor: bus access this_bus -> this_processor.bus_access; 
			bus_modul_lacznosci: bus access this_bus -> this_modul_lacznosci.bus_access;
			
	end AtmSystem.with_devices;
	
	process Controller 	
		features
			-- Event ports
			czytnik_in: in event port;
			sejf_in: in event port;
			czytnik_out: out event port;
			sejf_out: out event port;
			modul_gotowkowy_in: in event port;
			modul_gotowkowy_out: out event port;
			
			-- Data ports
			key_input: in data port Base_Types::Character;
			obraz_out: out data port Base_Types::String;	
			drukarka_out: out data port Base_Types::String;
			dane_karty_out: out data port;
			dane_konta_in: in data port;
			
	end Controller;
	
	process implementation Controller.with_threads	
		subcomponents
			
			this_read_card_insert: thread read_card_insert.impl;
			this_read_modul_input: thread read_modul_input.impl;
			this_sejf_thread: thread sejf_thread.impl;
			this_klawiatura_thread: thread klawiatura_input.impl;
			this_obraz_output: thread obraz_output.impl;
			this_drukarka_out: thread drukarka_output.impl;
			this_lacznosc_thread: thread  lacznosc_thread.impl;
			
		connections
			
			read_card_in_conn: port czytnik_in -> this_read_card_insert.czytnik_in;
			modul_in_conn: port modul_gotowkowy_in -> this_read_modul_input.modul_in;
			sejf_in_conn: port sejf_in -> this_sejf_thread.sejf_in;
			klawiatura_conn: port key_input -> this_klawiatura_thread.keyboard_in;
			
			read_card_out_conn: port this_read_card_insert.czytnik_out -> czytnik_out;
			modul_out_conn: port this_read_modul_input.modul_out -> modul_gotowkowy_out;
			sejf_out_conn: port this_sejf_thread.sejf_out -> sejf_out;
			obraz_output_conn: port this_obraz_output.obraz_out -> obraz_out;
			drukarka_output_conn: port this_drukarka_out.drukarka_out -> drukarka_out;
			
			lacznosc_in_conn: port dane_konta_in -> this_lacznosc_thread.dane_konta_in;
			lacznosc_out_conn: port this_lacznosc_thread.dane_karty_out -> dane_karty_out;
			
	end Controller.with_threads;
		
	thread read_card_insert		
		features
			czytnik_in: in event port;
			czytnik_out: out event port;
			
	end read_card_insert;
	
	thread implementation read_card_insert.impl		
		calls
			Main: {
				czytaj_karte: subprogram CzytajKarte;
				wydaj_karte: subprogram WydajKarte;
			};
	end read_card_insert.impl;
	
	thread read_modul_input
		features
			modul_in: in event port;
			modul_out: out event port;
			
	end read_modul_input;
	
	thread implementation read_modul_input.impl
		calls
			Main: {
				wyplata: subprogram Wyplata;
				wplata: subprogram Wplata;
			};
	end read_modul_input.impl;
	
	thread sejf_thread
		features
			sejf_in: in event port;
			sejf_out: out event port;
			
	end sejf_thread;
	
	thread implementation sejf_thread.impl
		calls
			Main: {
				wydaj_kwote: subprogram WydajKwote;
				stan_kasy: subprogram PobierzStanSejfu;
			};	
	end sejf_thread.impl;
	
	thread klawiatura_input
		features 
			keyboard_in: in data port Base_Types::Character;						
	end klawiatura_input;
	
	thread implementation klawiatura_input.impl
		calls
			Main: {
				read_key_input: subprogram ReadKeyInput;
			};
		connections
			input_conn: parameter keyboard_in -> read_key_input.key_input;
	end klawiatura_input.impl;
	
	thread obraz_output
		features
			obraz_out: out data port Base_Types::String;
			
	end obraz_output;
	
	thread implementation obraz_output.impl
		calls
			Main: {
				get_content: subprogram GetObraz;
			};
		connections
			data_conn: parameter obraz_out -> get_content.obraz_out;
	end obraz_output.impl;
	
	thread drukarka_output
		features
			drukarka_out: out data port Base_Types::String;			
	end drukarka_output;
	
	thread implementation drukarka_output.impl
		calls
			Main: {
				send_text: subprogram SendText;
			};
		connections
			print_conn: parameter drukarka_out -> send_text.text_out;
	end drukarka_output.impl;
	
	thread lacznosc_thread
		features
			dane_konta_in: in data port;
			dane_karty_out: out data port;
	end lacznosc_thread;
	
	thread implementation lacznosc_thread.impl
		calls
			Main: {
				get_dane_konta: subprogram GetDaneKonta;
				send_dane_karty: subprogram SendDaneKarty;
			};
		connections
			dane_karty: parameter dane_karty_out ->  send_dane_karty.dane_karty ;
			dane_konta: parameter get_dane_konta.dane_konta -> dane_konta_in ;
	end lacznosc_thread.impl;
	
	-- Subprograms
	subprogram GetDaneKonta	
		features
			dane_konta: out parameter;
	end GetDaneKonta;
	
	
	subprogram implementation GetDaneKonta.impl
		properties
			Source_Language        => (C);
			Source_Name            => "get_dane_konta";
			source_text  		   => ("bankomat.c"); 
	end GetDaneKonta.impl;
	
	subprogram SendDaneKarty
		features
			dane_karty: in parameter;			
	end SendDaneKarty;
	
	subprogram implementation SendDaneKarty.impl
		properties
			Source_Language        => (C);
			Source_Name            => "send_dane_karty";
			source_text  		   => ("bankomat.c"); 
		
	end SendDaneKarty.impl;
	
	subprogram GetObraz		
		features
			obraz_out : out parameter Base_Types::String;
	end GetObraz;
	
	subprogram implementation GetObraz.impl		
		properties
			Source_Language        => (C);
			Source_Name            => "get_content";
			source_text  		   => ("bankomat.c"); 		
	end GetObraz.impl;
	
	subprogram SendText
		features
			text_out: out parameter Base_Types::String;
	end SendText;
	subprogram implementation SendText.impl
		properties
			Source_Language        => (C);
			Source_Name            => "send_text";
			source_text  		   => ("bankomat.c"); 
	end SendText.impl;
		
	subprogram ReadKeyInput	
		features
			key_input: in parameter Base_Types::Character;	
	end ReadKeyInput;	
	subprogram implementation ReadKeyInput.impl
		properties
			Source_Language        => (C);
			Source_Name            => "read_key_input";
			source_text  		   => ("winda.c");	
	end ReadKeyInput.impl;	
	
	subprogram WydajKwote	
	end WydajKwote;
	
	subprogram implementation WydajKwote.impl
		properties
			Source_Language        => (C);
			Source_Name            => "wydaj_kwote";
			source_text  		   => ("winda.c");		
	end WydajKwote.impl;
	
	
	subprogram PobierzStanSejfu		
	end PobierzStanSejfu;
	
	subprogram implementation PobierzStanSejfu.impl
		properties
			Source_Language        => (C);
			Source_Name            => "pobierz_stan_konta";
			source_text  		   => ("winda.c");			
	end PobierzStanSejfu.impl;
	
	subprogram Wplata		
	end Wplata;
	
	subprogram implementation Wplata.impl
		properties
			Source_Language        => (C);
			Source_Name            => "wplata_gotowki";
			source_text  		   => ("winda.c");			
	end Wplata.impl;	
	
	subprogram Wyplata		
	end Wyplata;
	
	subprogram implementation Wyplata.impl
		properties
			Source_Language        => (C);
			Source_Name            => "wyplata_gotowki";
			source_text  		   => ("winda.c");			
	end Wyplata.impl;	
	
	subprogram CzytajKarte		
	end CzytajKarte;
	
	subprogram implementation CzytajKarte.impl
		properties
			Source_Language        => (C);
			Source_Name            => "czytaj_karte";
			source_text  		   => ("winda.c");			
	end CzytajKarte.impl;	
	
	subprogram WydajKarte		
	end WydajKarte;
	
	subprogram implementation WydajKarte.impl
		properties
			Source_Language        => (C);
			Source_Name            => "wydaj_karte";
			source_text  		   => ("winda.c");			
	end WydajKarte.impl;	
	
	-- Components
	
	processor MainProcessor		
		features
			bus_access: requires bus access HwConnection;
			
	end MainProcessor;
	
	processor implementation MainProcessor.impl
		subcomponents
			this_memory: memory RAM;
			
	end MainProcessor.impl;
	
	memory RAM		
	end RAM;
	
	bus HwConnection		
	end HwConnection;
	
	bus implementation HwConnection.impl
		
	end HwConnection.impl;
	
	-- Devices
	device CzytnikKart		
		features
			wlozono_karte: out event port;
			zatrzymaj_karte: in event port;
			
			bus_access: requires bus access HwConnection;
			
	end CzytnikKart;
	
	device implementation CzytnikKart.impl		
	end CzytnikKart.impl;
	
	device ModulGotowkowy	
		features
			pobierz_gotowke: in event port;
			gotowka_pobrana: out event port;
			
			bus_access: requires bus access HwConnection;
						
	end ModulGotowkowy;
	
	device implementation ModulGotowkowy.impl		
	end ModulGotowkowy.impl;
	
	device Drukarka		
		features
			drukuj: in event port;
			
			bus_access: requires bus access HwConnection;						
	end Drukarka;
	
	device implementation Drukarka.impl		
	end Drukarka.impl;
	
	device Sejf		
		features
			umieszczono_gotowke: out event port;
			wydaj_gotowke: in event port;
			
			bus_access: requires bus access HwConnection;						
	end Sejf;
	
	device implementation Sejf.impl		
	end Sejf.impl;
	
	device Klawiatura	
		features
			key_input: out data port Base_Types::Character;
			
			bus_access: requires bus access HwConnection;						
	end Klawiatura;
	
	device implementation Klawiatura.impl		
	end Klawiatura.impl;
	
	device Wyswietlacz		
		features
			obraz_input: in data port Base_Types::String;
						
			bus_access: requires bus access HwConnection;			
	end Wyswietlacz;
	
	device implementation Wyswietlacz.impl
	end Wyswietlacz.impl;
		
	device Modul_Lacznosci
		features
			dane_karty: in data port;
			dane_konta: out data port;
			
			bus_access: requires bus access HwConnection;			
	end Modul_Lacznosci;
	
	device implementation Modul_Lacznosci.impl
	end Modul_Lacznosci.impl;
	
end Bankomat;